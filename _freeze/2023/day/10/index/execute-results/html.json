{
  "hash": "dbd50ab3a8b9f6d3433b3ec0054320fa",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"2023: Day 10\"\ndate: 2023-12-10\ncategories:\n  - R\ndraft: false\n---\n\n\n## Setup\n\n[The original challenge](https://adventofcode.com/2023/day/10)\n\n[My data](input){target=\"_blank\"}\n\nThere are a lot of pipes. Puzzle input is a two-dimensional sketch of all the surface pipes we can see.\n\n- `|` is a vertical pipe connecting north and south.\n- `-` is a horizontal pipe connecting east and west.\n- `L` is a 90-degree bend connecting north and east.\n- `J` is a 90-degree bend connecting north and west.\n- `7` is a 90-degree bend connecting south and west.\n- `F` is a 90-degree bend connecting south and east.\n- `.` is ground; there is no pipe in this tile.\n- `S` is the starting position of the animal; there is a pipe on this tile, but your sketch doesn't show what shape the pipe has.\n\nThere is an animal which is somewhere in the pipes. Prompt suggests that it is inside \"one large, continuous loop\". For example, one like this:\n\n```\n.....\n.F-7.\n.|.|.\n.L-J.\n.....\n```\n\nWhich would have looked like this if the animal had entered through the northwest corner\n```\n.....\n.S-7.\n.|.|.\n.L-J.\n.....\n```\n\nOther key facts:\n\n- The tile where the animal doesn't show its true shape, but it can be inferred from the surrounding pipes.\n- The pipe with `S` is assummed to connect back to the pipes that conect to it.\n- There are many pipes that aren't connected to the loop.\n\n> If you want to get out ahead of the animal, you should find the tile in the loop that is farthest from the starting position. Because the animal is in the pipe, it doesn't make sense to measure this by direct distance. Instead, you need to find the tile that would take the longest number of steps along the loop to reach from the starting point - regardless of which way around the loop the animal went.\n\nFor example, for the following loop:\n```\n..F7.\n.FJ|.\nSJ.L7\n|F--J\nLJ...\n```\n\nDistances would be like this:\n```\n..45.\n.236.\n01.78\n14567\n23...\n```\nThus, the farthest point from the start is 8 steps away.\n\n> Find the single giant loop starting at S. How many steps along the loop does it take to get from the starting position to the point farthest from the starting position?\n\n\n## Part 1\n\nIt feels like dataframe-like data structures are not suitable for this problem. Instead, I'll have to use 2-D matrices and go through them using double for loops (i.e. writing ugly code ðŸ™ƒ just like I did for [day 3](/2023/day/3/)). There might be a more suitable data structure fpr approaching this, but unfortunately, I'm not aware of it yet.\n\n(I have a gut feeling that this could be addressed through Object-Oriented Programming? Like, defining each of the pipes as different classes? Anyway, onto the matrices...)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(here)\n\nsketch <- read_lines(here(\"2023/day/10/input\")) %>%\n  str_split(pattern = \"\", simplify=TRUE)\n\nsketch[1:10, 1:10]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]\n [1,] \"F\"  \"-\"  \"7\"  \"J\"  \"F\"  \"-\"  \"F\"  \"-\"  \"F\"  \"|\"  \n [2,] \"|\"  \"F\"  \"-\"  \"J\"  \"|\"  \"|\"  \"L\"  \"-\"  \".\"  \"J\"  \n [3,] \"F\"  \"F\"  \"-\"  \"7\"  \"7\"  \"-\"  \"7\"  \"L\"  \"7\"  \"F\"  \n [4,] \"F\"  \"7\"  \"-\"  \"J\"  \"|\"  \"F\"  \"J\"  \".\"  \"-\"  \"-\"  \n [5,] \"|\"  \"|\"  \"F\"  \"J\"  \"7\"  \"F\"  \"7\"  \"F\"  \"L\"  \"7\"  \n [6,] \"F\"  \"7\"  \"7\"  \".\"  \"-\"  \"F\"  \"J\"  \"J\"  \"L\"  \"J\"  \n [7,] \"L\"  \"|\"  \"-\"  \"L\"  \".\"  \"J\"  \"|\"  \".\"  \"|\"  \"L\"  \n [8,] \"F\"  \"|\"  \".\"  \"|\"  \".\"  \"L\"  \"|\"  \"7\"  \"-\"  \"|\"  \n [9,] \"L\"  \"J\"  \"F\"  \"L\"  \"L\"  \"F\"  \"J\"  \"7\"  \"J\"  \"L\"  \n[10,] \"|\"  \"-\"  \"J\"  \"7\"  \".\"  \"J\"  \"J\"  \".\"  \"7\"  \"7\"  \n```\n\n\n:::\n:::\n\n\nData is loaded. Now, how to find the \"big loop\"?\n\nAn idea: create a \"mirror matrix\" filled with zeroes.\nThen start exploring the map using S as an starting point (look at the 8 tiles that surround S). \n\n## Part 2",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}